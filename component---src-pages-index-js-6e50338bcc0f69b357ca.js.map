{"version":3,"sources":["webpack:///./src/components/about-content.js","webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js"],"names":["About","Icons","AboutContent","query","render","data","style","display","borderRadius","margin","className","fixed","profileImage","childImageSharp","alt","role","aria-label","href","target","rel","src","githubIcon","xingIcon","linkedInIcon","mailIcon","Post","props","node","frontmatter","date","to","fields","slug","title","Main","Posts","BlogIndex","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","hideHeader","keywords","map","key","count","postClass"],"mappings":"kTAeMA,EAAK,0QAkBLC,EAAK,kSA6BI,SAASC,IAGpB,OAAO,YAAC,cAAD,CACHC,MAAK,aAaLC,OAAQ,SAAAC,GAAI,OACR,YAACL,EAAD,KACI,YAAC,IAAD,CAAKM,MAAO,CAACC,QAAS,QAASC,aAAc,GAAIC,OAAQ,aACpDC,UAAU,WACVC,MAAON,EAAKO,aAAaC,gBAAgBF,MACzCG,IAAK,uBAGV,kJAC+B,oBAAMC,KAAK,MAAMC,aAAW,WAA5B,QAD/B,KAGA,4DAAuC,oBAAMD,KAAK,MAAMC,aAAW,qBAA5B,WAAvC,oDAAsJ,iBAClJC,KAAK,sBAAsBC,OAAO,SAASC,IAAI,uBADmG,WAAtJ,MAEA,iGAA4E,oBAAMJ,KAAK,MAAMC,aAAW,UAA5B,MAA5E,gDAGA,YAACf,EAAD,KACI,sBAAI,iBAAGgB,KAAK,6BAA6BC,OAAO,SAASC,IAAI,uBAAsB,mBAC/EC,IAAKC,IACLP,IAAI,qBACR,sBAAI,iBAAGG,KAAK,kDAAkDC,OAAO,SAC9DC,IAAI,uBAAsB,mBAC7BC,IAAKE,IAAUR,IAAI,WACvB,sBAAI,iBAAGG,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAsB,mBACvFC,IAAKG,IACLT,IAAI,eACR,sBAAI,iBAAGG,KAAI,4BAA6B,mBAAKG,IAAKI,IAAUV,IAAI,kB,6GCrG9EW,EAAI,yNAmBK,aAAAC,GAAK,OAChB,YAACD,EAAD,KACI,mBAAKf,UAAU,QAAQgB,EAAMC,KAAKC,YAAYC,MAC9C,YAAC,OAAD,CAAMC,GAAIJ,EAAMC,KAAKI,OAAOC,KAAMtB,UAAU,QACvCgB,EAAMC,KAAKC,YAAYK,U,+KCd9BC,EAAI,qPAwBJC,EAAK,2GAULC,EAAY,SAAC,EAAQC,GAAc,IAArBhC,EAAoB,EAApBA,KACViC,EAAYjC,EAAKkC,KAAKC,aAAaP,MACnCQ,EAAQpC,EAAKqC,kBAAkBC,MACjCC,EAAc,EAElB,OACI,YAAC,IAAD,CAAQC,YAAY,EAAMZ,MAAOK,GAC7B,YAAC,IAAD,CACIL,MAAM,YACNa,SAAU,CAAC,OAAD,iCAGd,YAACZ,EAAD,KACI,mBAAKxB,UAAU,SACX,YAAC,IAAD,OAGJ,YAACyB,EAAD,KACI,+BACCM,EAAMM,KAAI,YAAa,IAAXpB,EAAU,EAAVA,KAET,OADAiB,IAEI,YAAC,IAAD,CACII,IAAKrB,EAAKI,OAAOC,KACjBiB,MAAOL,EACPjB,KAAMA,EACNuB,UAAS,gBAmC1B,mBAAAxB,GAAK,OAChB,YAAC,cAAD,CACIvB,MA3BQ,aA4BRC,OAAQ,SAAAC,GAAI,OACR,YAAC+B,EAAD,aAAWC,SAAUX,EAAMW,SAAUX,OAAK,EAACrB,KAAMA,GAAUqB,S","file":"component---src-pages-index-js-6e50338bcc0f69b357ca.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nimport styled from \"@emotion/styled\"\n\n\nimport xingIcon from '../../content/assets/icons/xing.svg';\nimport linkedInIcon from '../../content/assets/icons/linkedin.svg';\nimport githubIcon from '../../content/assets/icons/github.svg';\nimport mailIcon from '../../content/assets/icons/mail.svg';\n\n\nconst About = styled.div`\n    .kg-image {\n        width: 400px!important;\n        height: 400px!important;\n        max-width: 100%;\n        max-height: 100%;\n    }\n    \n    @media (max-width: 650px) {\n        .kg-image {\n            width: 250px!important;\n            height: 250px!important;\n            max-width: 100%;\n            max-height: 100%;\n        }\n    }\n`\n\nconst Icons = styled.ul`\n    && {\n        list-style: none; \n        justify-content: center;\n        overflow: hidden;\n        display: flex;\n    }\n    \n    li {\n      float: left;\n    }\n    \n    li a {\n      display: block;\n      color: white;\n      text-align: center;\n      padding: 16px;\n      text-decoration: none;\n    }\n    \n    li a:hover {\n      background-color: #cbeafb;\n    }\n    \n    img {\n        width: 50px;\n    }\n`\n\nexport default function AboutContent() {\n    const mSuffix = 'lukstei.com';\n\n    return <StaticQuery\n        query={graphql`\n  query {\n    profileImage: file(\n      relativePath: { eq: \"profile-pic.jpg\" }\n    ) {\n      childImageSharp {\n        fixed(width: 500) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`}\n        render={data => (\n            <About>\n                <Img style={{display: \"block\", borderRadius: 20, margin: \"40px auto\"}}\n                     className=\"kg-image\"\n                     fixed={data.profileImage.childImageSharp.fixed}\n                     alt={\"Lukas Steinbrecher\"}\n                />\n\n                <p>Welcome! My name is Lukas Steinbrecher and this is my personal blog where I write about techie\n                    stuff. I'm based in Vienna <span role=\"img\" aria-label=\"austria\">üá¶üáπ</span>.</p>\n\n                <p>I am a passionate Software Engineer <span role=\"img\" aria-label=\"software engineer\">üë®üèº‚Äçüíª</span>, currently consulting financial institutions at <a\n                    href=\"https://senacor.com\" target=\"_blank\" rel=\"noopener noreferrer\">Senacor</a>. </p>\n                <p>If you just want to say hello or ask a question, send me a short message <span role=\"img\" aria-label=\"letter\">üíå</span>. I am always\n                    eager to make new connections.</p>\n\n                <Icons>\n                    <li><a href=\"https://github.com/lukstei\" target=\"_blank\" rel=\"noopener noreferrer\"><img\n                        src={githubIcon}\n                        alt=\"GitHub lukstei\"/></a></li>\n                    <li><a href=\"https://www.xing.com/profile/Lukas_Steinbrecher\" target=\"_blank\"\n                           rel=\"noopener noreferrer\"><img\n                        src={xingIcon} alt=\"XING\"/></a></li>\n                    <li><a href=\"https://at.linkedin.com/in/lukstei\" target=\"_blank\" rel=\"noopener noreferrer\"><img\n                        src={linkedInIcon}\n                        alt=\"LinkedIn\"/></a></li>\n                    <li><a href={`mailto:lukas@${mSuffix}`}><img src={mailIcon} alt=\"Mail\"/></a></li>\n                </Icons>\n            </About>\n        )}\n    />;\n}","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nconst Post = styled.div`\n    margin-bottom: 1.5em;\n\n    .date {\n        font-weight: 700;\n        text-transform: uppercase;\n    }\n    \n    .post {\n        color: rgb(69, 69, 69);\n        font-size: 3rem;\n        font-weight: 700;\n    }\n    \n    .post:hover {\n        color: black;\n    }\n`\n\nexport default props => (\n    <Post>\n        <div className=\"date\">{props.node.frontmatter.date}</div>\n        <Link to={props.node.fields.slug} className=\"post\">\n            {props.node.frontmatter.title}\n        </Link>\n    </Post>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nimport AboutContent from \"../components/about-content\";\n\nimport styled from \"@emotion/styled\"\n\nconst Main = styled.div`\n    &&& {\n        width: 100%;\n        display: flex;\n    }\n    \n    @media (max-width: 1024px) {\n        display: block!important;\n        \n        .about {\n            min-width: 0px!important;\n        }\n    }\n    \n    .about {\n        max-width: 600px;\n        min-width: 600px;\n    }\n    \n    .post-feed {\n        display: block;\n    }\n`\n\nconst Posts = styled.div`\n    &&& {\n        margin-left: 20px;\n    }\n    \n    h2 {\n        margin: 30px 0;\n    }   \n`\n\nconst BlogIndex = ({data}, location) => {\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    let postCounter = 0\n\n    return (\n        <Layout hideHeader={true} title={siteTitle}>\n            <SEO\n                title=\"All posts\"\n                keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n            />\n\n            <Main>\n                <div className=\"about\">\n                    <AboutContent/>\n                </div>\n\n                <Posts>\n                    <h2>Posts</h2>\n                    {posts.map(({node}) => {\n                        postCounter++\n                        return (\n                            <PostCard\n                                key={node.fields.slug}\n                                count={postCounter}\n                                node={node}\n                                postClass={`post`}\n                            />\n                        )\n                    })}\n                </Posts>\n            </Main>\n        </Layout>\n    )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n    <StaticQuery\n        query={indexQuery}\n        render={data => (\n            <BlogIndex location={props.location} props data={data} {...props} />\n        )}\n    />\n)\n"],"sourceRoot":""}